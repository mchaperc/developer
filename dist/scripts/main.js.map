{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["$(document).on('ready', function() {\n\t$('.fa-bars').on('click', function(e) {\n\t\te.preventDefault();\n\t\t$('.header-nav-links-mobile').toggleClass('active');\n\t});\n\t$(document).on('click touchstart', '.header-nav-links-link', function(e) {\n\t\tconsole.log( e.target.id );\n\t\te.preventDefault();\n\t\tswitch (e.target.id) {\n\t\t\tcase 'work':\n\t\t\t\tconsole.log( 'in work' );\n\t\t\t\t$('html,body').animate({scrollTop: Math.ceil($('.secondary-container').offset().top)}, 500);\n\t\t\t\tbreak;\n\t\t\tcase 'skills':\n\t\t\t\t$('html,body').animate({scrollTop: Math.ceil($('.quinary-container').offset().top)}, 500);\n\t\t\t\tbreak;\n\t\t\tcase 'about':\n\t\t\t\t$('html,body').animate({scrollTop: Math.ceil($('.senary-container').offset().top)}, 500);\n\t\t\t\tbreak;\n\t\t\tcase 'contact':\n\t\t\t\t$('html,body').animate({scrollTop: Math.ceil($('.septenary-container').offset().top)}, 500);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\t$('#myModal').on('shown.bs.modal', function () {\n\t  $('#myInput').focus()\n\t});\n\t$(window).on('scroll', () => {\n\t\tlet currentLocation = $('html,body').scrollTop();\n\t\tlet headerOffset = $('.header-nav-links').offset().top;\n\t\tif ( currentLocation <= headerOffset ) {\n\t\t\t$('#returnToTop').hide();\n\t\t\treturn;\n\t\t}\n\t\tif ( currentLocation > headerOffset ) {\n\t\t\t$('#returnToTop').show(500);\n\t\t\treturn;\n\t\t}\n\t});\n\t$('#returnToTop').on('click', (e) => $(window).css({scrollTop: 0}));\n\t$(function () {\n\t    // Get the context of the canvas element we want to select\n\t    let data = {\n\t\t    labels: [\"JavaScript/ES6\", \"Python\", \"NodeJS/Express\", \"Backbone/Marionette\", \"ReactJS/Redux\", \"CSS3\", \"HTML5\"],\n\t\t    datasets: [\n\t\t        {\n\t\t            fillColor: \"rgba(151,187,205,0.2)\",\n\t\t            strokeColor: \"rgba(151,187,205,1)\",\n\t\t            pointColor: \"rgba(151,187,205,1)\",\n\t\t            pointStrokeColor: \"#fff\",\n\t\t            pointHighlightFill: \"#fff\",\n\t\t            pointHighlightStroke: \"rgba(151,187,205,1)\",\n\t\t            data: [90, 85, 60, 90, 85, 85, 85],\n\t\t        }\n\t\t    ]\n\t\t};\n\t\tlet option = {\n\t\t    responsive: true,\n\t\t};\n\t    let ctx = document.getElementById(\"skillsChart\").getContext('2d');\n\t    let myRadarChart = new Chart(ctx).Radar(data, option);\n\t    document.getElementById('skillsChart').innerHTML = ctx;\n\t});\n});"],"sourceRoot":"/source/"}